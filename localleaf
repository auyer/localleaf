#!/usr/bin/env bash

set -e

CMD="$(basename "$0")"
# From: https://github.com/overleaf/overleaf/blob/main/services/clsi/app/js/LatexRunner.js#L16
declare -A ENGINE_FLAGS=()
ENGINE_FLAGS[latex]='-pdfdvi'
ENGINE_FLAGS[lualatex]='-lualatex'
ENGINE_FLAGS[pdflatex]='-pdf'
ENGINE_FLAGS[xelatex]='-xelatex'
# Formating codes
if [ "$TERM" != "dumb" ] && type tput >/dev/null; then
    # BOLD="$(tput bold)"
    RESET="$(tput sgr0)"
    COLOR1="$(tput setaf 1)"
    COLOR2="$(tput setaf 2)"
    COLOR3="$(tput setaf 3)"
else
    # BOLD=""
    RESET=""
    COLOR1=""
    COLOR2=""
    COLOR3=""
fi

err() {
    printf "${COLOR1}[$CMD] Err:${RESET} %s\n" "$@" 1>&2 && exit 2
}
warn() {
    printf "${COLOR3}[$CMD] Warn:${RESET} %s\n" "$@" 1>&2
}
info() {
    printf "${COLOR2}[$CMD] Info:${RESET} %s\n" "$@" 1>&2
}

usage() {
    printf "Easy breezy latex.

Spins up a latex docker image, monitors .tex files and builds on change.

Usage: %s [OPTIONS] [PROJECT_DIR] -- [EXTRA_ARGS]
  -h                          Show this message and exit.
  -m MAIN_DOCUMENT            The main document of the latex project.
  -e ENGINE                   Latex engine. [%s] {%s}
  -i IMAGE                    Docker image. [%s]
  -c                          Commit changes on exit.
  -1                          Don't monitor, build once and exit.
  PROJECT_DIR                 Root directory of the latex project. ['.']
  EXTRA_ARGS                  Extra arguments to pass to latexmk, e.g. --outdir=build/
" "$CMD" "$ENGINE" "$(
        IFS=,
        echo "${!ENGINE_FLAGS[*]}"
    )" "$IMAGE"
}

check_git() {
    git -C "$1" rev-parse 2>/dev/null
}

ENGINE="pdflatex"
IMAGE="loiccoyle/localleaf"
COMMIT_TRAP=0
BUILD_ONCE=0
PROJECT_DIR="."

while getopts "e:i:m:o:1ch" opt; do
    case $opt in
    "h") usage && exit ;;
    "e")
        [[ -v ENGINE_FLAGS[$OPTARG] ]] || err "Unknown latex engine '$OPTARG'"
        ENGINE="$OPTARG"
        ;;
    "i") IMAGE="$OPTARG" ;;
    "m") MAIN_DOCUMENT="$OPTARG" ;;
    "1") BUILD_ONCE=1 ;;
    "c") COMMIT_TRAP=1 ;;
    ?) usage && exit 1 ;;
    esac
done

shift "$((OPTIND - 1))"
EXTRA_ARGS="$*"

type "docker" >/dev/null || err "'docker' not found."

PROJECT_DIR_NAME="$(basename "$(realpath "$PROJECT_DIR")")"

[ -z "$PROJECT_DIR" ] && err "Missing PROJECT_DIR"
[ ! -d "$PROJECT_DIR" ] && err "'$PROJECT_DIR' is not a directory."

if [ "$COMMIT_TRAP" == 1 ]; then
    check_git "$PROJECT_DIR" || err "'$PROJECT_DIR' is not a git dir."
    # TODO: Check if the commit works
    trap 'git -C $PROJECT_DIR add -u && git commit -m "Update [localleaf]"' EXIT
fi

if [ -z "$MAIN_DOCUMENT" ]; then
    ROOT_TEX_FILES=("$PROJECT_DIR"/*.tex)
    MAIN_DOCUMENT="${ROOT_TEX_FILES[0]}"
    warn "Guessing main document: '$MAIN_DOCUMENT', use '-m' to specify main latex document."
fi

[ -z "$MAIN_DOCUMENT" ] && err "Missing MAIN_DOCUMENT"
[ ! -f "$MAIN_DOCUMENT" ] && err "'$MAIN_DOCUMENT' not found."

# Based on: https://github.com/overleaf/overleaf/blob/main/services/clsi/app/js/LatexRunner.js#L153
if [ "$BUILD_ONCE" = 1 ]; then
    # Just build once
    LATEX_BUILD="
echo '$(info "Building once" 2>&1)'
latexmk -interaction=batchmode -f ${ENGINE_FLAGS[$ENGINE]} -synctex=1 $(realpath --relative-to="$PROJECT_DIR" "$MAIN_DOCUMENT") ${EXTRA_ARGS[*]}
echo '$(info "Latex build done" 2>&1)'
"
else
    # Monitor *.tex files recursively and run compilation when a change is detected.
    # When entr detects a new file in the monitored directory, it is added to the monitoring.
    # entr: https://manpages.org/entr
    LATEX_BUILD="
echo '$(info "Monitoring *.tex files" 2>&1)'
while sleep 1; do
  find -type f -name '*.tex' | entr -d sh -c '
    latexmk -interaction=batchmode -f ${ENGINE_FLAGS[$ENGINE]} -synctex=1 $(realpath --relative-to="$PROJECT_DIR" "$MAIN_DOCUMENT") ${EXTRA_ARGS[*]}
    echo \"$(info "Latex build done" 2>&1)\"
' && echo '$(info "Triple tap <C-c> to quit" 2>&1)'
done
"
fi

info "Triple tap <C-c> to quit"
info "Starting docker container"

docker run -t --rm --user "$(id -u):$(id -g)" \
    -v "$(realpath "$PROJECT_DIR")":"/$PROJECT_DIR_NAME" "$IMAGE" bash -ic "
cd /$PROJECT_DIR_NAME
$LATEX_BUILD
"
